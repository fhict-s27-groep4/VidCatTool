@{
    ViewData["Title"] = "Review";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using Service_Layer.ViewModels;
@model ReviewViewModel

<link href="~/css/review.css" rel="stylesheet" />

<div class="reviewContainer">

    <div class="reviewVideo">
        <video controls>
            <source src="@Html.Raw(ViewBag.VideoLink)" />
        </video>
    </div>
    <form method="post">
        <div class="row reviewRow">
            <input asp-for="Post.VideoIdentity" type="hidden" value="@ViewBag.VideoIdentity" />
            <div class="reviewPart col-sm-6" id="Pad-Model">
                <h1>PAD-Model</h1>
                <div class="row padmodelItem">
                    <div class="col-sm-4">Pleasure</div>
                    <div class="slidecontainer col-sm-4">
                        <input onclick="SliderClick()" type="range" min="0" max="5" value="0" class="slider" id="pleasureSlider">
                    </div>
                    <input asp-for="Post.Pleasure" class="col-sm-4 padInput" id="pleasureValue" value="0" readonly />
                </div>
                <div class="row padmodelItem">
                    <div class="col-sm-4">Arrousal</div>
                    <div class="slidecontainer col-sm-4">
                        <input onclick="SliderClick()" type="range" min="0" max="5" value="0" class="slider" id="arrousalSlider">
                    </div>
                    <input asp-for="Post.Arrousal" class="col-sm-4 padInput" id="arrousalValue" value="0" readonly />
                </div>
                <div class="row padmodelItem">
                    <div class="col-sm-4">Dominance</div>
                    <div class="slidecontainer col-sm-4">
                        <input onclick="SliderClick()" type="range" min="0" max="5" value="0" class="slider" id="dominanceSlider">
                    </div>
                    <input asp-for="Post.Dominance" class="col-sm-4 padInput" id="dominanceValue" value="0" readonly />
                </div>
            </div>

            <div class="reviewPart col-sm-6" id="Category">
                <h1>Category</h1>
                <div class="row reviewRow">
                    <div class="custom-select col-sm-6">
                        <div class="mainselect">
                            <input type="text" list="categorymain" id="inputmain" name="maincat" placeholder="Category" onchange="GetSubCategories()" />
                            <datalist id='categorymain'>
                                @foreach (var cat in Model.Get.Categories)
                                {
                                    <option value="@cat.Name" data-id="@cat.UniqueID"></option>
                                }
                            </datalist>
                        </div>
                    </div>
                    <div class="custom-select col-sm-6" id="subCategory ">
                        <div class="subselect">
                            <input type="text" list="categorysub" id="subinput" name="subcat" placeholder="Sub-Category" />
                            <datalist id="categorysub"></datalist>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div><button name="next" value="true" type="submit" class="btn prim-btn btn-submit disabled" id="submitNextBtn">Submit & Next Video</button></div>
        <div><button name="next" value="false" type="submit" class="btn prim-btn btn-submit-close disabled" id="submitCloseBtn">Submit & Close</button></div>
    </form>
</div>

<script>
    function GetSubCategories() {
        var subcategory = $("#categorysub");
        subcategory.empty().append('<option selected="selected" value="Loading..." disabled = "disabled"></option>');
        $.ajax({
            type: "GET",
            url: "/Review/GetSubCategories?id=" + $("#categorymain option[value='" + document.getElementById("inputmain").value + "']").attr('data-id'),
            dataType: 'JSON',
            contentType: "application/json",
            success: function (data) {
                subcategory.empty();
                for (var i = 0; i < data.length; i++) {
                    subcategory.append('<option value="' + data[i].name + '" data-id="' + data[i].uniqueID + '"></option > ');
                }
            }
        });
    }

    function SliderValue(nameOfSlider, nameOfValue) {
        var slider = document.getElementById(nameOfSlider);
        var output = document.getElementById(nameOfValue);
        output.value = slider.value;

        slider.oninput = function () {
            output.value = this.value;
        }
    }
    SliderValue("pleasureSlider", "pleasureValue");
    SliderValue("arrousalSlider", "arrousalValue");
    SliderValue("dominanceSlider", "dominanceValue");

    function SliderClick() {
        var pleasureIndex = document.getElementById("pleasureValue").value;
        var arrousalIndex = document.getElementById("arrousalValue").value;
        var domincaneIndex = document.getElementById("dominanceValue").value;
        var submitNextBtn = document.getElementById("submitNextBtn").classList;
        var submitCloseButton = document.getElementById("submitCloseBtn").classList;

        if (pleasureIndex == 0 || arrousalIndex == 0 || domincaneIndex == 0) {
            submitCloseButton.remove("active");
            submitCloseButton.add("disabled");
            submitNextBtn.remove("active");
            submitNextBtn.add("disabled");
        }
        else {
            submitCloseButton.remove("disabled");
            submitCloseButton.add("active");
            submitNextBtn.remove("disabled");
            submitNextBtn.add("active");
        }
    }
</script>

